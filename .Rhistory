diff = round(difftime(date[i], first))
day = c(day, diff)
}
market$Date <- day
fullmodel <- lm(Return~., data = market)
summary(fullmodel)
par(mfrow=c(2,2))
plot(fullmodel)
market.tr = market
#market.tr$lReturn = market$Return^(2/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$VIX = market$VIX^(-1)
market.tr$VIX2 = market$VIX2^(-1)
#market.tr$Return = NULL
#market.tr$AAPL = NULL
#market.tr$AAPL2 = NULL
fullmodel2 = lm(Return~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
#market.tr$lReturn = market$Return^(2/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$VIX = market$VIX^(-1)
market.tr$VIX2 = market$VIX2^(-1)
#market.tr$Return = NULL
#market.tr$AAPL = NULL
#market.tr$AAPL2 = NULL
market.tr$VIX = NULL
market.tr$VIX2 = NULL
fullmodel2 = lm(Return~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
#market.tr$lReturn = market$Return^(2/3)
#market.tr$lAAPL = market$AAPL^(1/3)
#market.tr$lAAPL2 = market$AAPL2^(1/3)
#market.tr$VIX = market$VIX^(-1)
#market.tr$VIX2 = market$VIX2^(-1)
#market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
market.tr$VIX = NULL
market.tr$VIX2 = NULL
fullmodel2 = lm(Return~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = market$Return^(2/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$VIX = market$VIX^(-1)
market.tr$VIX2 = market$VIX2^(-1)
#market.tr$Return = NULL
#market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
market.tr$VIX = NULL
market.tr$VIX2 = NULL
fullmodel2 = lm(Return~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
test_model <- lm(Return ~ VIX + AAPL2 + AAPL + SPGSCITR, data = market)
test_model$coefficients
test_model$coef
length(test_model$coefficients)
knitr::opts_chunk$set(echo = TRUE)
library(car)
24%5
24%5
24%%5
1:3
knitr::opts_chunk$set(echo = TRUE)
market_origin <- read.csv("market_index_clean.csv")
first <- market_origin[1,]
market <- market_origin[2:3104,]
market$AAPL2 <- market_origin[,"AAPL"][1:3103]
market$Return <- (market$AAPL - market$AAPL2)/market$AAPL2
market
names(market)
?lm
variable.names(test_model)
length(test_model$coefficients) - 1
names(test_model$coefficients)
names(test_model$coefficients)[2:4]
names(test_model$coefficients)[2:5]
names(test_model$coef)[2:5]
test_model$"VIX"
market_origin <- read.csv("market_index_clean.csv")
first <- market_origin[1,]
market <- market_origin[2:3104,]
market$AAPL2 <- market_origin[,"AAPL"][1:3103]
market$Return <- (market$AAPL - market$AAPL2)/market$AAPL2
library(lubridate)
market$Date <- market_origin$Date[2:3104]
date <- market$Date
first <- date[1]
day <- c()
for(i in 1:length(date)) {
diff = round(difftime(date[i], first))
day = c(day, diff)
}
market$Date <- day
fit <- lm(Return~., data = market)
summary(fit)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
# Residuals v.s. Covariates Plot
par(mfrow=c(p%%2, 2))
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
abline(0,0)
}
# Studendized Residuals v.s. Covariates Plot
par(mfrow=c(p%%2, 2))
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
# Partial Residual v.s. Covariates Plot
par(mfrow=c(p%%2, 2))
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
# Residuals v.s. Covariates Plot
par(mfrow=c(nrows, 2))
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
abline(0,0)
}
# Studendized Residuals v.s. Covariates Plot
par(mfrow=c(nrows, 2))
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
# Partial Residual v.s. Covariates Plot
par(mfrow=c(nrows, 2))
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
typeof(24%%4)
typeof(2)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
abline(0,0)
}
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
savepar = par(mfrow=c(2, 2))
# Residuals v.s. Covariates Plot
savepar
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
abline(0,0)
}
# Studendized Residuals v.s. Covariates Plot
savepar
covars = names(model$coef)[2:(p+1)]
for (cov in covars) {
plot(data$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
length(fit$residuals)
length(market)
length(market$Date)
length(rstudent(fit))
length(resid(fit))
p = length(fit$coef) - 1
for (cov in names(fit$coef)[2:(p+1)]) {
plot(market$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
p = length(fit$coef) - 1
resids = resid(fit)
for (cov in names(fit$coef)[2:(p+1)]) {
plot(market$cov, resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
names(fit$coef)[2:(p+1)]
cov = "Date"
market$cov
market[cov]
p = length(fit$coef) - 1
resids = resid(fit)
for (cov in names(fit$coef)[2:(p+1)]) {
plot(market[cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
p = length(fit$coef) - 1
resids = resid(fit)
for (cov in names(fit$coef)[2:(p+1)]) {
plot(market[:,cov], resids, ylim=ylim_resid,
p = length(fit$coef) - 1
resids = resid(fit)
for (cov in names(fit$coef)[2:(p+1)]) {
plot(market[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(2, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(2, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
3/2
3//2
length(fit$coef) - 1
8%%2
8%2
8/2
8%/%2
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%/%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%/%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%/%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%/%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates", outer=T)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates", outer=T)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
cov_residual_plots <- function(model, data) {
p = length(model$coef) - 1 # the number of covariates in the model
nrows = p%/%2
resids = resid(model)
rstdnt = rstudent(model)
ylim_resid = c(min(resids),max(resids))
ylim_rstdt = c(min(rstdnt),max(rstdnt))
covars = names(model$coef)[2:(p+1)]
savepar = par(mfrow=c(nrows, 2))
# Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], resids, ylim=ylim_resid,
xlab=cov, ylab="Residuals")
}
title("Residuals v.s. Covariates",
outer=T, line=-1)
# Studendized Residuals v.s. Covariates Plot
savepar
for (cov in covars) {
plot(data[,cov], rstdnt, ylim=ylim_resid,
xlab=cov, ylab="Studendized Residuals")
abline(2,0)
abline(-2,0)
}
title("Studendized Residuals v.s. Covariates",
outer=T, line=-1)
# Partial Residual v.s. Covariates Plot
savepar
crPlots(m=model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
}
cov_residual_plots(fit, market)
plot(model)
plot(fit)
