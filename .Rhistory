test_model2 = lm(lReturn ~ VIX + AAPL2 + AAPL + SPGSCITR, data = market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
market.tr = market
market.tr$lReturn = -2*market$Return^(1/3)
test_model2 = lm(lReturn ~ VIX + AAPL2 + AAPL + SPGSCITR, data = market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
test_model2 = lm(lReturn ~ VIX + AAPL2 + AAPL + SPGSCITR, data = market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
market.tr = market
market.tr$lReturn = market$Return^(1/5)
test_model2 = lm(lReturn ~ VIX + AAPL2 + AAPL + SPGSCITR, data = market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
fullmodel2 = lm(lReturn ~ ., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$Return = NULL
fullmodel2 = lm(lReturn ~ ., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$AAPL = market$AAPL^(1/3)
market.tr$AAPL2 = market$AAPL2^(1/3)
market.tr$Return = NULL
fullmodel2 = lm(lReturn ~ ., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
library(car)
crPlots(m=test_model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
library(car)
crPlots(m=test_model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn ~ ., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn ~ ., data = market.tr)
par(mfrow=c(2,2))
#plot(fullmodel2)
summary(fullmodel2)
drop1(fullmodel2, test="F")
drop(fullmodel2, test="F")
drop1(fullmodel2, test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPX), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPX), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPX), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPX), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
test_model2 = update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB)
summary(test_model2)
test_model2 = update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB)
plot(test_model2)
summary(test_model2)
test_model2 = update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
test_model2 = update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPX), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
nullmodel2 = lm(lReturn~1, data=market.tr)
step(nullmodel2, scope=list(upper=fullmodel2), direction="both")
test_model2 = fit(lReturn ~ VIX + EEM + lAAPL + lAAPL2, data=market.tr)
test_model2 = lm(lReturn ~ VIX + EEM + lAAPL + lAAPL2, data=market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
# Autocorrelation tests
library(lmtest)
acf(residuals(test_model2), main="Residuals", lag.max=10)
dwtest(test_model2, alternative=c("two.sided"), data=market.tr)
library(car)
crPlots(m=test_model, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
library(car)
crPlots(m=test_model2, main="Partial Residual Plots",
ylab="Partial Residual", smooth=T)
library(mctest)
imcdiag(market.tr[ , !(names(market.tr) %in% c('lReturn'))], market$lReturn)
market.tr[ , !(names(market.tr) %in% c('lReturn'))]
market$lReturn
library(mctest)
imcdiag(market.tr[ , !(names(market.tr) %in% c('lReturn'))], market.tr$lReturn)
market.tr2 = market
market.tr2$lReturn = market$Return^(2/3)
market.tr2$lAAPL = market$AAPL^(2/3)
market.tr2$lAAPL2 = market$AAPL2^(2/3)
market.tr2$Return = NULL
market.tr2$AAPL = NULL
market.tr2$AAPL2 = NULL
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
plot(fullmodel3)
summary(fullmodel3)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
fmodel = lm(STDReturn~., data = market.n)
summary(fmodel)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
names(market.n)
#fmodel = lm(STDReturn~., data = market.n)
#summary(fmodel)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$AAPL2 = market$AAPL2
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
fmodel = lm(STDReturn~., data = market.n)
summary(fmodel)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$AAPL2 = market$AAPL2
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
market.n$VIX = sqrt(market_origin$VIX[1:3103])
fmodel = lm(STDReturn~., data = market.n)
summary(fmodel)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$AAPL2 = market$AAPL2
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
#names(market.n)
fmodel = lm(STDReturn~., data = market.n)
summary(fmodel)
market.n = market_origin[2:3104,]
market.n$Date = market$Date
market.n$AAPL2 = market$AAPL2
market.n$STDReturn = market$Return/sqrt(market_origin$VIX[1:3103])
market.n$VIXrt = sqrt(market_origin$VIX[1:3103])
#names(market.n)
fmodel = lm(STDReturn~., data = market.n)
summary(fmodel)
summary(fullmodel)
nmodel = lm(STDReturn~1, data=market.n)
step(nmodel, scope=list(upper=fmodel), direction="both")
fit = lm(formula = STDReturn ~ VIX + VIXrt + EEM + SPX + AAPL2 + AAPL,
data = market.n)
plot(fit)
summary(fit)
market.tr2 = market.tr
market.tr$lReturn = market.tr$lReturn^2
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel3)
market.tr2 = market.tr
market.tr$lReturn = market.tr$lReturn^2
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
plot(fullmodel3)
summary(fullmodel3)
market.tr2 = market.tr
market.tr2$lReturn = market.tr$lReturn^2
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
#plot(fullmodel3)
summary(fullmodel3)
market.tr2 = market.tr
market.tr2$lReturn = market.tr$lReturn^2
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
plot(fullmodel3)
summary(fullmodel3)
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
#plot(fullmodel2)
summary(fullmodel2)
market.tr2 = market.tr
market.tr2$lReturn = market.tr$lReturn^2
fullmodel3 = lm(lReturn~., data = market.tr2)
par(mfrow=c(2,2))
plot(fullmodel3)
summary(fullmodel3)
market.tr$wts = 1/(fitted(lm(abs(residuals(fullmodel2))~fitted(fullmodel2)))^2)
dim(fitted(fullmodel2))
len(fitted(fullmodel2))
length(fitted(fullmodel2))
market.tr = market
market.tr$lReturn = market$Return^(1/3)
market.tr$lAAPL = market$AAPL^(1/3)
market.tr$lAAPL2 = market$AAPL2^(1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
#par(mfrow=c(2,2))
#plot(fullmodel2)
summary(fullmodel2)
fitted(fullmodel2)
length(fitted(fullmodel2))
sapply(market.tr, function(x) sum(is.na(x)))
sapply(market, function(x) sum(is.na(x)))
sum(is.na(market$Return^(1/3)))
sum(is.na(market$Return^(0.33333)))
sum(market$Return <= 0)
sum(market$Return < 0)
-1^(1/3)
# Helper function to avoid NA's when applying power
#   to vector with negative values
exponent <- function(a, pow) (abs(a)^pow)*sign(a)
sum(is.na(exponent(market$Return,2)))
sum(is.na(exponent(market$Return,1/3)))
# Helper function to avoid NA's when applying power
#   to vector with negative values
exponent <- function(a, pow) (abs(a)^pow)*sign(a)
market.tr = market
market.tr$lReturn = exponent(market$Return,1/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
#par(mfrow=c(2,2))
#plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,1/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,2/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,1/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
drop1(fullmodel2, test="F")
#drop1(update(fullmodel2, .~.-SPX), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM), test="F")
#drop1(update(fullmodel2, .~.-SPX-SPGSCITR-Date-BNDGLB), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX), test="F")
nullmodel2 = lm(lReturn~1, data=market.tr)
step(nullmodel2, scope=list(upper=fullmodel2), direction="both")
market.tr = market
market.tr$lReturn = exponent(market$Return,1/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX-Date), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX-Date), test="F")
drop1(update(fullmodel2, .~.-SPGSCITR-VIX-EEM-SPX-Date-BNDGLB), test="F")
nullmodel2 = lm(lReturn~1, data=market.tr)
step(nullmodel2, scope=list(upper=fullmodel2), direction="both")
test_model2 = lm(lReturn ~ VIX + SPX, data=market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
test_model3 = lm(lReturn ~ lAAPL + lAAPL2, data=market.tr)
par(mfrow=c(2,2))
plot(test_model3)
summary(test_model3)
# Autocorrelation tests
library(lmtest)
acf(residuals(test_model2), main="Residuals", lag.max=10)
dwtest(test_model2, alternative=c("two.sided"), data=market.tr)
market_origin <- read.csv("market_index_clean.csv")
first <- market_origin[1,]
market <- market_origin[2:3104,]
market$AAPL2 <- market_origin[,"AAPL"][1:3103]
market$Return <- (market$AAPL - market$AAPL2)/market$AAPL2
library(lubridate)
market$Date <- market_origin$Date[2:3104]
date <- market$Date
first <- date[1]
day <- c()
for(i in 1:length(date)) {
diff = round(difftime(date[i], first))
day = c(day, diff)
}
market$Date <- day
fullmodel <- lm(Return~., data = market)
summary(fullmodel)
sign(market$Return)
market.tr = market
market.tr$lReturn = exponent(market$Return,1/3)
#market.tr$lAAPL = exponent(market$AAPL,1/3)
#market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
#market.tr$AAPL = NULL
#market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
sum(market.tr$lReturn < 0)
market.tr = market
market.tr$lReturn = exponent(market$Return,2/3)
#market.tr$lAAPL = exponent(market$AAPL,1/3)
#market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
#market.tr$AAPL = NULL
#market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,2/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,2/3)
market.tr$lAAPL = exponent(market$AAPL,2/3)
market.tr$lAAPL2 = exponent(market$AAPL2,2/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
market.tr = market
market.tr$lReturn = exponent(market$Return,2/3)
market.tr$lAAPL = exponent(market$AAPL,1/3)
market.tr$lAAPL2 = exponent(market$AAPL2,1/3)
market.tr$Return = NULL
market.tr$AAPL = NULL
market.tr$AAPL2 = NULL
fullmodel2 = lm(lReturn~., data = market.tr)
par(mfrow=c(2,2))
plot(fullmodel2)
summary(fullmodel2)
drop1(fullmodel2, test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM-Date), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM-Date-BNDGLB), test="F")
drop1(fullmodel2, test="F")
drop1(update(fullmodel2, .~.-VIX), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM), test="F")
drop1(update(fullmodel2, .~.-VIX-SPGSCITR-EEM-Date-BNDGLB-SPX), test="F")
nullmodel2 = lm(lReturn~1, data=market.tr)
step(nullmodel2, scope=list(upper=fullmodel2), direction="both")
test_model2 = lm(lReturn ~ VIX + SPX + SPGSCITR, data=market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
test_model2 = lm(lReturn ~ lAAPL + lAAPL2, data=market.tr)
par(mfrow=c(2,2))
plot(test_model2)
summary(test_model2)
# Autocorrelation tests
library(lmtest)
acf(residuals(test_model2), main="Residuals", lag.max=10)
dwtest(test_model2, alternative=c("two.sided"), data=market.tr)
summary(market.tr)
market.tr$wts = 1/(fitted(lm(abs(residuals(fullmodel2))~fitted(fullmodel2)))^2)
fmodel = lm(lReturn~., weights=wts, data=market.tr)
plot(fmodel)
summary(fmodel)
market.tr$wts = 1/(fitted(lm(abs(residuals(fullmodel2))~fitted(fullmodel2)))^2)
fmodel = lm(lReturn~., weights=wts, data=market.tr)
par(mfrow=c(2,2))
plot(fmodel)
summary(fmodel)
market.tr$wts = 1/(fitted(lm(abs(residuals(fullmodel2))~fitted(fullmodel2)))^2)
fmodel = lm(lReturn~., weights=wts, data=market.tr)
par(mfrow=c(2,2))
plot(fmodel)
summary(fmodel)
market.tr$wts2 = 1/(fitted(lm(abs(residuals(test_model2))~fitted(test_model2)))^2)
tmodel = lm(lReturn~lAAPL + lAAPL2, weights=wts2, data=market.tr)
par(mfrow=c(2,2))
plot(tmodel)
summary(tmodel)
market.tr$wts = 1/(fitted(lm(abs(residuals(test_model2))~fitted(test_model2)))^2)
tmodel = lm(lReturn~lAAPL + lAAPL2, weights=wts, data=market.tr)
par(mfrow=c(2,2))
plot(tmodel)
summary(tmodel)
