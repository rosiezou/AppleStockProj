plot(nuclear$date, nuclear$cost)
plot(nuclear$t1, nuclear$cost, col = "green")
plot(nuclear$t2, nuclear$cost, col = "red")
plot(nuclear$cap, nuclear$cost, col = "blue")
plot(nuclear$cum.n, nuclear$cost, col = "orange")
## Part B
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
model1 <- lm(y1~x1+x2+x3+x4)
names(boxcox(model1))
rev(order(boxcox(model1)$y1))[1]
boxcox(model1)$x[62]
## lambda = 0.4646465
## pick approximation lambda = 0.5
## this suggests taking the sqrt of cost
## Part C
y2 <- y1^0.5
x12 <- x1^0.5
x22 <- x2^0.5
x32 <- x3^0.5
x42 <- x4^0.5
model2 <- lm(y2~x12+x22+x32+x42)
model2$coefficients
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
model1 <- lm(y1~x1+x2+x3+x4+x5)
names(boxcox(model1))
rev(order(boxcox(model1)$y1))[1]
boxcox(model1)$x[62]
y2 <- y1^0.5
x12 <- x1^0.5
x22 <- x2^0.5
x32 <- x3^0.5
x42 <- x4^0.5
x52 <- x4^0.5
model2 <- lm(y2~x12+x22+x32+x42+x52)
model2$coefficients
View(nuclear)
y2 <- y1^0.5
x12 <- x1^0.5
x22 <- x2^0.5
x32 <- x3^0.5
x42 <- x4^0.5
x52 <- x5^0.5
model2 <- lm(y2~x12+x22+x32+x42+x52)
model2$coefficients
y1 <- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
model1 <- lm(y1~x1+x2+x3+x4+x5)
names(boxcox(model1))
rev(order(boxcox(model1)$y1))[1]
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[62]
## Part C
y2 <- y1^0.5
x12 <- x1^0.5
x22 <- x2^0.5
x32 <- x3^0.5
x42 <- x4^0.5
x52 <- x5^0.5
model2 <- lm(y2~x12+x22+x32+x42+x52)
model2$coefficients
library(boot)
library(MASS)
data(nuclear)
## Part A
par(mfrow=c(2, 3))
plot(nuclear$date, nuclear$cost)
plot(nuclear$t1, nuclear$cost, col = "green")
plot(nuclear$t2, nuclear$cost, col = "red")
plot(nuclear$cap, nuclear$cost, col = "blue")
plot(nuclear$cum.n, nuclear$cost, col = "orange")
## Part B
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
model1 <- lm(y1~x1+x2+x3+x4+x5)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[57]
y2 <- y1^0.25
x12 <- x1^0.25
x22 <- x2^0.25
x32 <- x3^0.25
x42 <- x4^0.25
x52 <- x5^0.25
model2 <- lm(y2~x12+x22+x32+x42+x52)
model2$coefficients
## Part E
qqnorm(model1$residuals)
qqnorm(model2$residuals)
qqnorm(model1$residuals);qqline()
library(MASS)
data(nuclear)
par(mfrow=c(2, 3))
plot(nuclear$date, nuclear$cost)
plot(nuclear$t1, nuclear$cost, col = "green")
plot(nuclear$t2, nuclear$cost, col = "red")
plot(nuclear$cap, nuclear$cost, col = "blue")
plot(nuclear$cum.n, nuclear$cost, col = "orange")
View(nuclear)
residualnorm <- rnorm(32, 0, sd(model1$residuals))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
x6 <- factor(nuclear$pr)
x7 <- factor(nuclear$ne)
x8 <- factor(nuclear$ct)
x9 <- factor(nuclear$bw)
x10 <- factor(nuclear$pt)
model1 <- lm(y1~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
x6 <- factor(nuclear$pr)
x7 <- factor(nuclear$ne)
x8 <- factor(nuclear$ct)
x9 <- factor(nuclear$bw)
x10 <- factor(nuclear$pt)
model1 <- lm(y1~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[48]
y2 <- y1^-0.10
x12 <- x1^-0.10
x22 <- x2^-0.10
x32 <- x3^-0.10
x42 <- x4^-0.10
x52 <- x5^-0.10
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
mfrow(par=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
modelP <- lm(y~P1 + P2 + P3)
y <- c(2.1, 4.6, 3.9, 2.3, 0.2, 3.4, 1.7, -0.4)
P1 <- c(1, 0, 0, 0, 1, 0, 0, 0)
P2 <- c(0, 1, 0, 0, 0, 1, 0, 0)
P3 <- c(0, 0, 1, 0, 0, 0, 1, 0)
R <- c(1, 1, 1, 1, 0, 0, 0, 0)
P1 <- factor(P1)
P2 <- factor(P2)
P3 <- factor(P3)
R <- factor(R)
modelF <- lm(y~P1 + P2 + P3 + R)
summary(modelF)
modelR <- lm(y~R)
anova(modelR, modelF)
modelP <- lm(y~P1 + P2 + P3)
summary(modelP)
anova(modelP, modelF)
plot(nuclear$t2, nuclear$cost, col = "red")
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
x6 <- factor(nuclear$pr)
x7 <- factor(nuclear$ne)
x8 <- factor(nuclear$ct)
x9 <- factor(nuclear$bw)
x10 <- factor(nuclear$pt)
model1 <- lm(y1~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[48]
library(boot)
library(MASS)
data(nuclear)
## Part A
par(mfrow=c(2, 3))
plot(nuclear$date, nuclear$cost)
plot(nuclear$t1, nuclear$cost, col = "green")
plot(nuclear$t2, nuclear$cost, col = "red")
plot(nuclear$cap, nuclear$cost, col = "blue")
plot(nuclear$cum.n, nuclear$cost, col = "orange")
## Part B
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
x6 <- factor(nuclear$pr)
x7 <- factor(nuclear$ne)
x8 <- factor(nuclear$ct)
x9 <- factor(nuclear$bw)
x10 <- factor(nuclear$pt)
model1 <- lm(y1~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[48]
## Part C
y2 <- y1^-0.10
x12 <- x1^-0.10
x22 <- x2^-0.10
x32 <- x3^-0.10
x42 <- x4^-0.10
x52 <- x5^-0.10
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
## Part E
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
## Part C
y2 <- ln(y1)
x12 <- ln(x1)
x22 <- ln(x2)
x32 <- ln(x3)
x42 <- ln(x4)
x52 <- ln(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm <- rnorm(32, 0, 1)
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm <- rnorm(32, 0, var(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
residualnorm <- rnorm(32, mean(model1$residuals), sd(model1$residuals))
residualnorm2 <- rnorm(32, mean(model2$residuals), sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
## Part C
y2 <-ln(y1)
x12 <- ln(x1)
x22 <- ln(x2)
x32 <- ln(x3)
x42 <- ln(x4)
x52 <- ln(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
## Part E
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
y2 <-log(y1)
x12 <- log(x1)
x22 <- log(x2)
x32 <- log(x3)
x42 <- log(x4)
x52 <- log(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
## Part E
residualnorm <- rnorm(32, 0, sd(model1$residuals))
residualnorm2 <- rnorm(32, 0, sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
y2 <-log(y1)
x12 <- log(x1)
x22 <- log(x2)
x32 <- log(x3)
x42 <- log(x4)
x52 <- log(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
## Part E
residualnorm <- rnorm(32, mean(model1$residuals), sd(model1$residuals))
residualnorm2 <- rnorm(32, mean(model2$residuals), sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
library(boot)
library(MASS)
data(nuclear)
## Part A
par(mfrow=c(2, 3))
plot(nuclear$date, nuclear$cost)
plot(nuclear$t1, nuclear$cost, col = "green")
plot(nuclear$t2, nuclear$cost, col = "red")
plot(nuclear$cap, nuclear$cost, col = "blue")
plot(nuclear$cum.n, nuclear$cost, col = "orange")
## Part B
y1<- nuclear$cost
x1 <- nuclear$t1
x2 <- nuclear$t2
x3 <- nuclear$cap
x4 <- nuclear$cum.n
x5 <- nuclear$date
x6 <- factor(nuclear$pr)
x7 <- factor(nuclear$ne)
x8 <- factor(nuclear$ct)
x9 <- factor(nuclear$bw)
x10 <- factor(nuclear$pt)
model1 <- lm(y1~x1+x2+x3+x4+x5+x6+x7+x8+x9+x10)
names(boxcox(model1))
rev(order(boxcox(model1)$y))[1]
boxcox(model1)$x[48]
## Part C
y2 <-log(y1)
x12 <- log(x1)
x22 <- log(x2)
x32 <- log(x3)
x42 <- log(x4)
x52 <- log(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
## Part E
residualnorm <- rnorm(32, mean(model1$residuals), sd(model1$residuals))
residualnorm2 <- rnorm(32, mean(model2$residuals), sd(model2$residuals))
par(mfrow=c(1,2))
qqnorm(model1$residuals);qqline(residualnorm)
qqnorm(model2$residuals);qqline(residualnorm2)
### Part B
y <- c(2.1, 4.6, 3.9, 2.3, 0.2, 3.4, 1.7, -0.4)
P1 <- c(1, 0, 0, 0, 1, 0, 0, 0)
P2 <- c(0, 1, 0, 0, 0, 1, 0, 0)
P3 <- c(0, 0, 1, 0, 0, 0, 1, 0)
R <- c(1, 1, 1, 1, 0, 0, 0, 0)
P1 <- factor(P1)
P2 <- factor(P2)
P3 <- factor(P3)
R <- factor(R)
modelF <- lm(y~P1 + P2 + P3 + R)
modelR <- lm(y~R)
anova(modelR, modelF)
modelP <- lm(y~P1 + P2 + P3)
anova(modelP, modelF)
## Part D
summary(modelF)
mu1 = ((-0.05 + 3.05 + 2) + (-0.05 + 3.05))/2
mu2 = ((-0.05 + 1.85 +2) + (-0.05 + 1.85))/2
### Part F
modelA <- lm(y~P1 + P2 + P3 + R + P1*R + P2*R + P3*R)
summary(modelA)
x12 <- log(x1)
x22 <- log(x2)
x32 <- log(x3)
x42 <- log(x4)
x52 <- log(x5)
model2 <- lm(y2~x12+x22+x32+x42+x52+x6+x7+x8+x9+x10)
model2$coefficients
linear_y <- c(0.827,  2.530,  2.191,  4.697,  6.911,  5.781,  4.747,  3.511,  1.334,  1.250,
3.191,  6.137,  9.901, 13.868, 14.995, 16.506, 15.793, 16.519, 12.857, 12.845,
10.623, 10.006, 11.256, 10.101,  9.613,  8.341,  8.132,  8.708, 12.669, 13.216,
17.838, 15.929, 18.578, 16.890, 14.190, 13.722, 10.782, 12.695, 13.815, 18.257,
18.324, 19.672, 15.053, 16.796, 14.249, 19.826, 21.675, 21.802, 20.455, 18.140,
18.617, 20.674, 24.634, 23.769, 26.912, 23.705, 25.137, 20.496, 22.113, 21.925,
23.941, 24.734, 25.317, 24.090, 24.679, 25.829, 26.314, 29.063, 30.165, 31.449,
30.436, 27.249, 24.645, 25.513, 23.272, 24.929, 23.982, 25.931, 25.920, 27.006,
27.147, 26.160, 27.288, 29.843, 29.295, 30.697, 31.237, 31.763, 32.714, 34.206,
36.029, 33.133, 35.765, 33.759, 37.581, 37.468, 40.807, 36.500, 35.224, 36.702)
plot(linear_y)
x <- matrix(data = linear_y)
b <- lsfit(c(1:100),linear_y)
y <- 0.3251141*x + 3.7168170
j <- c(1:100)
for (i in c(1:100)){
j[i] <- 0.3251141*i + 3.7168170
}
linear_error <- c(1:100)
for (i in c(1:100)) {
linear_error[i] <- linear_y[i] - j[i]
}
plot(linear_error)
model <- lm(y~0.3251141*x + 3.7168170,linear_y)
x2 <- 0.3251141*x + 3.7168170
model <- lm(y~x2,linear_y)
model <- lm(y~x2,data=linear_y)
model <- lm(y~x2,data=data.frame(linear_y))
summary(model)
market <- read.csv("market_index_clean.csv", header=TRUE)
market <- read.csv("./market_index_clean.csv", header=TRUE)
rm(list=ls())
shark <- read.csv("sharks.csv", header=TRUE)
logistic_model <- glm(Fatality~Length, data = shark, family=binomial())
rm(list=ls())
## Part A -----------------------------------------
logistic_fun <- function(m){
1/(1+exp(-(m$coefficients[1]+m$coefficients[2]*shark$Length)))
}
shark <- read.csv("sharks.csv", header=TRUE)
logistic_model <-
glm(Fatality~Length, data = shark, family=binomial())
# fitted_values <- fitted(logistic_model)
observation <- seq(1,65)
plot(shark$Length, shark$Fatality, main="Fatality plot", ylab="fatality", col="blue")
points(shark$Length, logistic_fun(logistic_model))
## Part B -----------------------------------------
shark_subset <- subset(shark, Fatality == 1)
logistic_model_fatal_only <-
glm(Fatality~Length, data = shark_subset, family=binomial())
summary(logistic_model_fatal_only)
## The estimated coefficients do not make sense.
## they are all very small and produce a series
## of fitted values of all ones
## Part C ------------------------------------------
set.seed(1)
sam = sample(65,10)
shark_sam <- shark[c(sam),]
log_sam <- glm(Fatality~Length, data = shark_sam, family=binomial())
glm.control()
## default maxit is 25
## Warning messages:
## 1: glm.fit: algorithm did not converge
## 2: glm.fit: fitted probabilities numerically 0 or 1 occurred
# i
log_sam_increase_iter <-
glm(Fatality~Length, data = shark_sam, family=binomial(),
maxit = 1000)
# ii
plot(shark_sam$Fatality, col="blue")
points(logistic_fun(log_sam_increase_iter))
## this is a perfect fit except for one point at index = 6
## where the function predicted 0 but the actual fatality was 1
rm(list=ls())
rm(list=ls())
setwd("~/Documents/school - current/stat331/AppleStockProj")
## setup
## this part creates a new variable called "return"
## and adds it to the data frame
market <- read.csv("market_index_clean.csv", header=TRUE)
appl2 <- market$AAPL[1:3103]
appl <- market$AAPL[2:3104]
return <- c(NA)
return <- c(return, (appl - appl2)/appl2)
market <- cbind(market, return)
par(mfrow=c(4,2))
hist(market$AAPL)
hist(market$SPX)
hist(market$VIX)
hist(market$SPGSCITR)
hist(market$BNDGLB)
hist(market$EEM)
hist(market$return)
hist(market$AAPL)
hist(market$SPX)
hist(market$VIX)
hist(market$SPGSCITR)
hist(market$BNDGLB)
hist(market$EEM)
hist(market$return)
View(market)
auto_regressive_model <- lm(appl~appl2)
plot(fitted(auto_regressive_model), residuals(auto_regressive_model))
auto_regressive_model <- lm(appl~appl2)
plot(residuals(auto_regressive_model))
auto_regressive_model <- lm(appl~appl2)
summary(auto_regressive_model)
auto_regressive_model <- lm(appl~appl2)
plot(fitted(auto_regressive_model), auto_regressive_model$residuals)
par("mar")
par(mar=c(1,1,1,1))
auto_regressive_model <- lm(appl~appl2)
plot(fitted(auto_regressive_model), auto_regressive_model$residuals)
auto_regressive_model <- lm(appl~appl2)
par(mar=c(2,2,2,2))
plot(fitted(auto_regressive_model), auto_regressive_model$residuals)
step(nullmodel,scope=list(upper=fullmodel),direction="both")
auto_regressive_model <- lm(appl~appl2)
plot(fitted(auto_regressive_model), auto_regressive_model$residuals)
dev.off()
auto_regressive_model <- lm(appl~appl2)
plot(fitted(auto_regressive_model), auto_regressive_model$residuals)
